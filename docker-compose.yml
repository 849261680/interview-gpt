# Interview-GPT 开发环境 Docker Compose
version: '3.8'

services:
  # 后端服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: backend-dev
    container_name: interview-gpt-backend-dev
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
      - ./shared:/app/shared
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    environment:
      - DEBUG=true
      - DATABASE_URL=sqlite:///./data/interview_gpt.db
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8000
    env_file:
      - ./backend/.env
    depends_on:
      - redis
    networks:
      - interview-gpt-network
    restart: unless-stopped

  # 前端服务
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: frontend-dev
    container_name: interview-gpt-frontend-dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app/frontend
      - ./shared:/app/shared
      - /app/frontend/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend
    networks:
      - interview-gpt-network
    restart: unless-stopped

  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: interview-gpt-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - interview-gpt-network
    restart: unless-stopped

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: interview-gpt-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - interview-gpt-network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  interview-gpt-network:
    driver: bridge 