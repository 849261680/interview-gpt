# Interview-GPT 开发环境 Dockerfile
# 支持热重载和开发调试

# ================================
# 后端开发环境
# ================================
FROM python:3.11-slim AS backend-dev

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    libpq-dev \
    curl \
    git \
    # 图像处理依赖
    tesseract-ocr \
    tesseract-ocr-chi-sim \
    tesseract-ocr-eng \
    # 文件处理依赖
    poppler-utils \
    libmagic1 \
    # 开发工具
    vim \
    htop \
    && rm -rf /var/lib/apt/lists/*

# 复制后端依赖文件
COPY backend/requirements.txt ./backend/

# 安装Python依赖
RUN pip install --upgrade pip setuptools wheel
RUN pip install --no-cache-dir -r backend/requirements.txt

# 安装开发依赖
RUN pip install --no-cache-dir \
    pytest-watch \
    black \
    flake8 \
    mypy \
    pre-commit

# 下载spaCy模型
RUN python -m spacy download en_core_web_sm

# 设置环境变量
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DEBUG=true

# 创建必要的目录
RUN mkdir -p /app/logs /app/uploads /app/data

# 暴露端口
EXPOSE 8000

# 启动命令（支持热重载）
CMD ["python", "-m", "uvicorn", "backend.src.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

# ================================
# 前端开发环境
# ================================
FROM node:18-alpine AS frontend-dev

# 设置工作目录
WORKDIR /app/frontend

# 安装全局工具
RUN npm install -g nodemon

# 复制依赖文件
COPY frontend/package*.json ./
COPY package.json /app/

# 安装依赖
RUN npm install

# 设置环境变量
ENV NODE_ENV=development
ENV NEXT_TELEMETRY_DISABLED=1

# 暴露端口
EXPOSE 3000

# 启动命令（支持热重载）
CMD ["npm", "run", "dev"] 